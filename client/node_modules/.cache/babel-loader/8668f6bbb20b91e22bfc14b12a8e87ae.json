{"ast":null,"code":"var _jsxFileName = \"/Users/giorgio/WebstormProjects/Express-React/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nconst ServerIP = \"http://192.168.188.40:9000/\";\n\nclass Container extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(AppHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"UpperSeparator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(AppMainContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"BottomSeparator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass AppHeader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  resetOrder() {\n    fetch(ServerIP + \"order/reset/\", {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(res => console.log(res));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"AppHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"TemakiOrder\");\n  }\n\n}\n\nclass MenuItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {// orderedItems: 0,\n    };\n    this.removeItem = this.removeItem.bind(this);\n    this.addItem = this.addItem.bind(this);\n  }\n\n  removeItem(event) {\n    var code;\n\n    if (event.target.attributes.code !== undefined) {\n      code = event.target.attributes.code;\n    } else {\n      code = event.target.parentNode.attributes.code;\n    }\n\n    this.changeItem(code, -1);\n  }\n\n  addItem(event) {\n    var code;\n\n    if (event.target.attributes.code !== undefined) {\n      code = event.target.attributes.code;\n    } else {\n      code = event.target.parentNode.attributes.code;\n    }\n\n    this.changeItem(code, +1);\n  }\n\n  changeItem(code, sign) {\n    console.log(code.value);\n    this.props.order(code.value, sign);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"MenuItem\",\n      code: this.props.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.props.name, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), \" \", this.props.count, \"Pz \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"RemoveItem\",\n      onClick: this.removeItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"-\"), React.createElement(\"img\", {\n      src: this.props.img,\n      className: \"itemLogo\",\n      alt: this.props.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"AddItem\",\n      onClick: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"+\"), React.createElement(\"div\", {\n      className: \"ItemCounter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.props.selected));\n  }\n\n}\n\nclass MyOrder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Order\" + this.props.mode,\n      id: \"MyOrder\" + this.props.mode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"OrderTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Il tuo ordine\"), React.createElement(\"ul\", {\n      className: \"OrderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.props.selectItems.map(item => {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, item[1], \"  x\", item[0], \" - \", this.props.menu[item[1] - 1].name);\n    })), React.createElement(\"button\", {\n      className: \"OpenMenu\",\n      onClick: this.props.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"OP\"));\n  }\n\n}\n\nclass CompleteOrder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Order\" + this.props.mode,\n      id: \"CompleteOrder\" + this.props.mode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"OrderTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Ordine Tavolo\"), React.createElement(\"ul\", {\n      className: \"OrderList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.props.selectItems.map(item => {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, item[1], \"  x\", item[0], \" - \", this.props.menu[item[1] - 1].name);\n    })), React.createElement(\"button\", {\n      className: \"OpenMenu\",\n      onClick: this.props.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"OP\"));\n  }\n\n}\n\nclass OrderBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myMode: \"Closed\",\n      completeMode: \"Closed\"\n    };\n    this.toggleCompleteOrder = this.toggleCompleteOrder.bind(this);\n    this.toggleMyOrder = this.toggleMyOrder.bind(this);\n  }\n\n  toggleMyOrder() {\n    if (this.state.completeMode === \"Opened\") {\n      this.setState({\n        completeMode: \"Closed\"\n      });\n    }\n\n    if (this.state.myMode === \"Opened\") {\n      this.setState({\n        myMode: \"Closed\"\n      });\n    } else if (this.state.myMode === \"Closed\") {\n      this.setState({\n        myMode: \"Opened\"\n      });\n    }\n  }\n\n  toggleCompleteOrder() {\n    if (this.state.myMode === \"Opened\") {\n      this.setState({\n        myMode: \"Closed\"\n      });\n    }\n\n    if (this.state.completeMode === \"Opened\") {\n      this.setState({\n        completeMode: \"Closed\"\n      });\n    } else if (this.state.completeMode === \"Closed\") {\n      this.setState({\n        completeMode: \"Opened\"\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"OrderBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(MyOrder, {\n      mode: this.state.myMode,\n      toggle: this.toggleMyOrder.bind(this),\n      selectItems: this.props.selectedItems,\n      menu: this.props.menu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(CompleteOrder, {\n      mode: this.state.completeMode,\n      toggle: this.toggleCompleteOrder.bind(this),\n      selectItems: this.props.complete,\n      menu: this.props.menu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass AppMainContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: \"login\",\n      user: \"\",\n      items: [],\n      orders: new Array(100),\n      completeOrders: new Array(100),\n      orderByUser: new Array(100)\n    };\n    this.state.orders.fill(0);\n    this.sendOrder = this.sendOrder.bind(this);\n    this.login = this.login.bind(this);\n    this.setUserName = this.setUserName.bind(this);\n    this.tryLogin = this.tryLogin.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(ServerIP + \"menu\").then(res => res.json()).then(res => this.setState({\n      items: res\n    })); //console.log(JSON.stringify(this.state.items));\n  }\n\n  updateOrder(itemCode, sign) {\n    let ordersUpdate = this.state.orders;\n    if (ordersUpdate[itemCode] + sign >= 0) ordersUpdate[itemCode] = ordersUpdate[itemCode] + sign;\n    this.setState({\n      orders: ordersUpdate\n    });\n    console.log(\"stateInMain\");\n    console.log(this.state.orders);\n  }\n\n  sendOrder() {\n    let order = {\n      user: this.state.user,\n      items: this.state.orders\n    };\n    fetch(ServerIP + \"order\", {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(order)\n    }).then(res => res.json()).then(res => {\n      this.setState({\n        completeOrders: res.complete,\n        orderByUser: res.byUser\n      });\n      console.log(res);\n    });\n  }\n\n  setUserName(e) {\n    this.setState({\n      user: e.target.value\n    });\n  }\n\n  tryLogin(e) {\n    if (e.keyCode === 13) {\n      this.login();\n    }\n  }\n\n  login() {\n    //TODO: Fetch server and retrieve previous order of the user if any are present SOLVED\n    fetch(ServerIP + \"order/userMenu/\", {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: this.state.user\n      })\n    }).then(res => res.json()).then(res => this.setState({\n      orders: res\n    }));\n    this.setState({\n      mode: \"menu\"\n    });\n  }\n\n  render() {\n    let myOrder = this.state.orders.map((item, idx) => {\n      return [item, idx];\n    }).filter(item => {\n      return item[0] > 0;\n    });\n\n    if (this.state.mode === \"menu\") {\n      return React.createElement(\"div\", {\n        className: \"AppMainContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"Send\",\n        onClick: this.sendOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"OK\"), this.state.items.map((item, idx) => {\n        return React.createElement(MenuItem, {\n          name: item.name,\n          ingredients: item.ingredients.concat(),\n          count: item.count,\n          img: item.img,\n          code: item.code,\n          order: this.updateOrder.bind(this),\n          selected: this.state.orders[idx + 1],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        });\n      }), React.createElement(OrderBar, {\n        selectedItems: myOrder,\n        menu: this.state.items,\n        complete: this.state.completeOrders,\n        byUser: this.state.orderByUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }));\n    } else if (this.state.mode === \"login\") {\n      return React.createElement(\"div\", {\n        className: \"Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"name\",\n        type: \"text\",\n        onChange: this.setUserName,\n        onKeyDown: this.tryLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"loginButton\",\n        onClick: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"OK\"));\n    }\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/giorgio/WebstormProjects/Express-React/client/src/App.js"],"names":["React","ServerIP","Container","Component","constructor","props","state","render","AppHeader","resetOrder","fetch","method","headers","then","res","json","console","log","MenuItem","removeItem","bind","addItem","event","code","target","attributes","undefined","parentNode","changeItem","sign","value","order","name","count","img","selected","MyOrder","mode","selectItems","map","item","menu","toggle","CompleteOrder","OrderBar","myMode","completeMode","toggleCompleteOrder","toggleMyOrder","setState","selectedItems","complete","AppMainContent","user","items","orders","Array","completeOrders","orderByUser","fill","sendOrder","login","setUserName","tryLogin","componentDidMount","updateOrder","itemCode","ordersUpdate","body","JSON","stringify","byUser","e","keyCode","myOrder","idx","filter","ingredients","concat","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst ServerIP = \"http://192.168.188.40:9000/\"\n\nclass Container extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    render(){\n        return (\n            <>\n                <AppHeader/>\n                <div className=\"UpperSeparator\"/>\n                <AppMainContent/>\n                <div className=\"BottomSeparator\"/>\n            </>\n        )\n    }\n\n}\n\nclass AppHeader extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    resetOrder(){\n        fetch(ServerIP+\"order/reset/\", {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            },\n        }).then(res => res.json()).then(res => console.log(res));\n    }\n\n    render(){\n        return (\n            <div className=\"AppHeader\">\n                TemakiOrder\n            </div>\n        )\n    }\n}\n\nclass MenuItem extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            // orderedItems: 0,\n        };\n        this.removeItem = this.removeItem.bind(this);\n        this.addItem = this.addItem.bind(this);\n    }\n\n    removeItem(event){\n        var code;\n        if(event.target.attributes.code !== undefined){\n            code = event.target.attributes.code;\n        }else{\n            code = event.target.parentNode.attributes.code;\n        }\n        this.changeItem(code, -1);\n    }\n\n    addItem(event){\n        var code;\n        if(event.target.attributes.code !== undefined){\n            code = event.target.attributes.code;\n        }else{\n            code = event.target.parentNode.attributes.code;\n        }\n        this.changeItem(code, +1);\n    }\n\n    changeItem(code, sign){\n        console.log(code.value);\n        this.props.order(code.value, sign);\n\n    }\n\n    render(){\n        return (\n            <div className=\"MenuItem\" code={this.props.code}>{this.props.name} <br/> {this.props.count}Pz <br/>\n                <button className=\"RemoveItem\" onClick={this.removeItem}>-</button>\n                <img src={this.props.img} className=\"itemLogo\" alt={this.props.name}/>\n                <button className=\"AddItem\" onClick={this.addItem}>+</button>\n                <div className=\"ItemCounter\">{this.props.selected}</div>\n            </div>\n        )\n    }\n}\n\nclass MyOrder extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    render(){\n\n        return (\n            <div className={\"Order\" + this.props.mode} id={\"MyOrder\" + this.props.mode}>\n                <div className=\"OrderTitle\">\n                    Il tuo ordine\n                </div>\n                <ul className=\"OrderList\">\n                    {this.props.selectItems.map((item) => {\n                        return  <li>{item[1]}  x{item[0]} - {this.props.menu[item[1]-1].name}</li>\n                    })}\n                </ul>\n                <button className=\"OpenMenu\" onClick={this.props.toggle}>OP</button>\n            </div>\n        )\n    }\n}\n\nclass CompleteOrder extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    render(){\n        return (\n            <div className={\"Order\" + this.props.mode} id={\"CompleteOrder\"+this.props.mode}>\n                <div className=\"OrderTitle\">\n                    Ordine Tavolo\n                </div>\n                <ul className=\"OrderList\">\n                    {this.props.selectItems.map((item) => {\n                        return  <li>{item[1]}  x{item[0]} - {this.props.menu[item[1]-1].name}</li>\n                    })}\n                </ul>\n                <button className=\"OpenMenu\" onClick={this.props.toggle}>OP</button>\n            </div>\n        );\n    }\n}\n\nclass OrderBar extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            myMode : \"Closed\",\n            completeMode: \"Closed\",\n        }\n        this.toggleCompleteOrder = this.toggleCompleteOrder.bind(this);\n        this.toggleMyOrder = this.toggleMyOrder.bind(this);\n    }\n\n    toggleMyOrder(){\n        if(this.state.completeMode === \"Opened\"){\n            this.setState({\n                completeMode: \"Closed\"\n            })\n        }\n        if(this.state.myMode === \"Opened\"){\n            this.setState({\n                myMode: \"Closed\"\n            })\n        }else if(this.state.myMode === \"Closed\"){\n            this.setState({\n                myMode: \"Opened\"\n            })\n        }\n    }\n\n    toggleCompleteOrder(){\n        if(this.state.myMode === \"Opened\"){\n            this.setState({\n                myMode: \"Closed\"\n            })\n        }\n        if(this.state.completeMode === \"Opened\"){\n            this.setState({\n                completeMode: \"Closed\"\n            })\n        }else if(this.state.completeMode === \"Closed\"){\n            this.setState({\n                completeMode: \"Opened\"\n            })\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"OrderBar\">\n                <MyOrder mode={this.state.myMode} toggle={this.toggleMyOrder.bind(this)} selectItems={this.props.selectedItems} menu={this.props.menu}/>\n                <CompleteOrder mode={this.state.completeMode} toggle={this.toggleCompleteOrder.bind(this)} selectItems={this.props.complete} menu={this.props.menu}/>\n            </div>\n        );\n    }\n}\n\nclass AppMainContent extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            mode: \"login\",\n            user: \"\",\n            items: [],\n            orders: new Array(100),\n            completeOrders: new Array(100),\n            orderByUser: new Array(100),\n        };\n        this.state.orders.fill(0);\n        this.sendOrder = this.sendOrder.bind(this);\n        this.login = this.login.bind(this);\n        this.setUserName = this.setUserName.bind(this);\n        this.tryLogin = this.tryLogin.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(ServerIP+\"menu\")\n            .then(res => res.json())\n            .then(res => this.setState({ items: res }));\n        //console.log(JSON.stringify(this.state.items));\n    }\n\n    updateOrder(itemCode, sign){\n        let ordersUpdate = this.state.orders;\n        if(ordersUpdate[itemCode] + sign>=0)\n            ordersUpdate[itemCode] = ordersUpdate[itemCode] + sign;\n        this.setState({\n            orders: ordersUpdate,\n        });\n        console.log(\"stateInMain\")\n        console.log(this.state.orders);\n    }\n\n    sendOrder(){\n        let order = {\n            user: this.state.user,\n            items: this.state.orders,\n        };\n\n        fetch(ServerIP+\"order\", {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(order)\n        }).then(res => res.json()).then(res => {\n            this.setState({\n                completeOrders: res.complete,\n                orderByUser: res.byUser,\n            });\n            console.log(res);\n        });\n\n    }\n\n    setUserName(e){\n        this.setState({\n            user: e.target.value,\n        })\n    }\n\n    tryLogin(e){\n        if(e.keyCode === 13){\n            this.login()\n        }\n    }\n\n    login(){\n        //TODO: Fetch server and retrieve previous order of the user if any are present SOLVED\n        fetch(ServerIP+\"order/userMenu/\", {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({user:this.state.user}),\n        })\n            .then(res => res.json())\n            .then(res => this.setState({ orders: res }));\n        this.setState({\n            mode: \"menu\"\n        })\n    }\n\n    render(){\n        let myOrder = this.state.orders.map((item, idx) => {\n            return [item, idx];\n        }).filter((item) => {\n            return item[0]>0;\n        });\n        if(this.state.mode === \"menu\"){\n            return (\n                <div className=\"AppMainContent\">\n                    <button id=\"Send\" onClick={this.sendOrder}>OK</button>\n                    {/*TODO: Add sections of the menu*/}\n                    {this.state.items.map((item, idx) => {\n                        return <MenuItem name={item.name} ingredients={item.ingredients.concat()} count={item.count} img={item.img} code={item.code} order={this.updateOrder.bind(this)} selected={this.state.orders[idx+1]}/>\n                    })}\n                    <OrderBar selectedItems={myOrder} menu={this.state.items} complete={this.state.completeOrders} byUser={this.state.orderByUser}/>\n                    {/*<MyOrder selectedItems={myOrder} menu={this.state.items}/>*/}\n                </div>\n            )\n        }else if(this.state.mode === \"login\"){\n            return (\n                <div className=\"Login\">\n                    <input id=\"name\" type=\"text\" onChange={this.setUserName} onKeyDown={this.tryLogin}/>\n                    <button id=\"loginButton\" onClick={this.login}>OK</button>\n                </div>\n\n            )\n        }\n    }\n}\n\nclass App extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n\n        }\n    }\n    render(){\n        return (\n            <Container/>\n        )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}