{"ast":null,"code":"var _jsxFileName = \"/Users/giorgio/WebstormProjects/Express-React/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nconst ServerIP = \"http://172.29.0.168:9000/\";\n\nclass Container extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(AppHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Separator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(AppMainContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass AppHeader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  resetOrder() {\n    fetch(ServerIP + \"order/reset/\", {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(res => console.log(res));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"AppHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"Reset\",\n      onClick: this.resetOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"R\"), \"TemakiOrder\");\n  }\n\n}\n\nclass MenuItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderedItems: 0\n    };\n    this.removeItem = this.removeItem.bind(this);\n    this.addItem = this.addItem.bind(this);\n  }\n\n  removeItem(event) {\n    var code;\n\n    if (event.target.attributes.code !== undefined) {\n      code = event.target.attributes.code;\n    } else {\n      code = event.target.parentNode.attributes.code;\n    }\n\n    this.changeItem(code, -1);\n  }\n\n  addItem(event) {\n    var code;\n\n    if (event.target.attributes.code !== undefined) {\n      code = event.target.attributes.code;\n    } else {\n      code = event.target.parentNode.attributes.code;\n    }\n\n    this.changeItem(code, +1);\n  }\n\n  changeItem(code, sign) {\n    console.log(code.value); //\n\n    if (this.state.orderedItems + sign >= 0) {\n      this.setState({\n        orderedItems: this.state.orderedItems + sign\n      });\n      this.props.order(code.value, sign);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"MenuItem\",\n      code: this.props.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.props.name, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), \" \", this.props.count, \"Pz \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"RemoveItem\",\n      onClick: this.removeItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"-\"), React.createElement(\"img\", {\n      src: this.props.img,\n      className: \"itemLogo\",\n      alt: this.props.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"AddItem\",\n      onClick: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"+\"), React.createElement(\"div\", {\n      className: \"ItemCounter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.state.orderedItems));\n  }\n\n}\n\nclass AppMainContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: \"login\",\n      items: [],\n      orders: new Array(100)\n    };\n    this.state.orders.fill(0);\n    this.sendOrder = this.sendOrder.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(ServerIP + \"menu\").then(res => res.json()).then(res => this.setState({\n      items: res\n    })); //console.log(JSON.stringify(this.state.items));\n  }\n\n  updateOrder(itemCode, sign) {\n    let ordersUpdate = this.state.orders;\n    ordersUpdate[itemCode] = ordersUpdate[itemCode] + sign;\n    this.setState({\n      orders: ordersUpdate\n    });\n    console.log(\"stateInMain\");\n    console.log(this.state.orders);\n  }\n\n  sendOrder() {\n    let order = {\n      user: \"Giorgio\",\n      items: this.state.orders\n    };\n    fetch(ServerIP + \"order\", {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(order)\n    }).then(res => res.json()).then(res => console.log(res));\n  }\n\n  changeMode(mode) {\n    this.setState({\n      mode: \"login\"\n    });\n  }\n\n  render() {\n    if (this.state.mode === \"menu\") {\n      return React.createElement(\"div\", {\n        className: \"AppMainContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"Send\",\n        onClick: this.sendOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"OK\"), this.state.items.map(item => {\n        return React.createElement(MenuItem, {\n          name: item.name,\n          ingredients: item.ingredients.concat(),\n          count: item.count,\n          img: item.img,\n          code: item.code,\n          order: this.updateOrder.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        });\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }));\n    } else if (this.state.mode === \"login\") {\n      return React.createElement(\"div\", {\n        className: \"Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"Cambio\",\n        onClick: this.changeMode(\"menu\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"OK\"));\n    }\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/giorgio/WebstormProjects/Express-React/client/src/App.js"],"names":["React","ServerIP","Container","Component","constructor","props","state","render","AppHeader","resetOrder","fetch","method","headers","then","res","json","console","log","MenuItem","orderedItems","removeItem","bind","addItem","event","code","target","attributes","undefined","parentNode","changeItem","sign","value","setState","order","name","count","img","AppMainContent","mode","items","orders","Array","fill","sendOrder","componentDidMount","updateOrder","itemCode","ordersUpdate","user","body","JSON","stringify","changeMode","map","item","ingredients","concat","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst ServerIP = \"http://172.29.0.168:9000/\"\n\nclass Container extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    render(){\n        return (\n            <>\n                <AppHeader/>\n                <div className=\"Separator\"/>\n                <AppMainContent/>\n            </>\n        )\n    }\n\n}\n\nclass AppHeader extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    resetOrder(){\n        fetch(ServerIP+\"order/reset/\", {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            },\n        }).then(res => res.json()).then(res => console.log(res));\n    }\n\n    render(){\n        return (\n            <div className=\"AppHeader\">\n                <button id=\"Reset\" onClick={this.resetOrder}>R</button>\n                TemakiOrder\n\n            </div>\n        )\n    }\n}\n\nclass MenuItem extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            orderedItems: 0,\n        };\n        this.removeItem = this.removeItem.bind(this);\n        this.addItem = this.addItem.bind(this);\n    }\n\n    removeItem(event){\n        var code;\n        if(event.target.attributes.code !== undefined){\n            code = event.target.attributes.code;\n        }else{\n            code = event.target.parentNode.attributes.code;\n        }\n        this.changeItem(code, -1);\n    }\n\n    addItem(event){\n        var code;\n        if(event.target.attributes.code !== undefined){\n            code = event.target.attributes.code;\n        }else{\n            code = event.target.parentNode.attributes.code;\n        }\n        this.changeItem(code, +1);\n    }\n\n    changeItem(code, sign){\n        console.log(code.value);\n        //\n        if(this.state.orderedItems+sign>=0){\n            this.setState({\n                orderedItems: this.state.orderedItems + sign,\n            });\n            this.props.order(code.value, sign);\n        }\n\n    }\n\n    render(){\n        return (\n            <div className=\"MenuItem\" code={this.props.code}>{this.props.name} <br/> {this.props.count}Pz <br/>\n                <button className=\"RemoveItem\" onClick={this.removeItem}>-</button>\n                <img src={this.props.img} className=\"itemLogo\" alt={this.props.name}/>\n                <button className=\"AddItem\" onClick={this.addItem}>+</button>\n                <div className=\"ItemCounter\">{this.state.orderedItems}</div>\n            </div>\n        )\n    }\n}\n\nclass AppMainContent extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            mode: \"login\",\n            items: [],\n            orders: new Array(100),\n        };\n        this.state.orders.fill(0);\n        this.sendOrder = this.sendOrder.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(ServerIP+\"menu\")\n            .then(res => res.json())\n            .then(res => this.setState({ items: res }));\n        //console.log(JSON.stringify(this.state.items));\n    }\n\n    updateOrder(itemCode, sign){\n        let ordersUpdate = this.state.orders;\n        ordersUpdate[itemCode] = ordersUpdate[itemCode] + sign;\n        this.setState({\n            orders: ordersUpdate,\n        });\n        console.log(\"stateInMain\")\n        console.log(this.state.orders);\n    }\n\n    sendOrder(){\n        let order = {\n            user: \"Giorgio\",\n            items: this.state.orders,\n        };\n        fetch(ServerIP+\"order\", {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(order)\n        }).then(res => res.json()).then(res => console.log(res));\n\n    }\n\n    changeMode(mode){\n        this.setState({\n            mode: \"login\"\n        })\n    }\n\n    render(){\n        if(this.state.mode === \"menu\"){\n            return (\n                <div className=\"AppMainContent\">\n                    <button id=\"Send\" onClick={this.sendOrder}>OK</button>\n                    {this.state.items.map(item => {\n                        return <MenuItem name={item.name} ingredients={item.ingredients.concat()} count={item.count} img={item.img} code={item.code} order={this.updateOrder.bind(this)}/>\n                    })}\n                    <br/>\n                </div>\n            )\n        }else if(this.state.mode === \"login\"){\n            return (\n                <div className=\"Login\">\n                    <input id=\"name\" />\n                    <button id=\"Cambio\" onClick={this.changeMode(\"menu\")}>OK</button>\n                </div>\n\n            )\n        }\n    }\n}\n\nclass App extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n\n        }\n    }\n    render(){\n        return (\n            <Container/>\n        )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}