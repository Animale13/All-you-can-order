{"ast":null,"code":"var _jsxFileName = \"/Users/giorgio/WebstormProjects/Express-React/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nconst ServerIP = \"http://192.168.1.9:9000/\";\n\nclass Container extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(AppHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Separator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(AppMainContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass AppHeader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  resetOrder() {\n    fetch(ServerIP + \"order/reset/\", {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(res => console.log(res));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"AppHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"TemakiOrder\");\n  }\n\n}\n\nclass MenuItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {// orderedItems: 0,\n    };\n    this.removeItem = this.removeItem.bind(this);\n    this.addItem = this.addItem.bind(this);\n  }\n\n  removeItem(event) {\n    var code;\n\n    if (event.target.attributes.code !== undefined) {\n      code = event.target.attributes.code;\n    } else {\n      code = event.target.parentNode.attributes.code;\n    }\n\n    this.changeItem(code, -1);\n  }\n\n  addItem(event) {\n    var code;\n\n    if (event.target.attributes.code !== undefined) {\n      code = event.target.attributes.code;\n    } else {\n      code = event.target.parentNode.attributes.code;\n    }\n\n    this.changeItem(code, +1);\n  }\n\n  changeItem(code, sign) {\n    console.log(code.value);\n    this.props.order(code.value, sign);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"MenuItem\",\n      code: this.props.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.props.name, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), \" \", this.props.count, \"Pz \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"RemoveItem\",\n      onClick: this.removeItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"-\"), React.createElement(\"img\", {\n      src: this.props.img,\n      className: \"itemLogo\",\n      alt: this.props.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"AddItem\",\n      onClick: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"+\"), React.createElement(\"div\", {\n      className: \"ItemCounter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.props.selected));\n  }\n\n}\n\nclass MyOrder extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"MyOrder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.props.selectedItems.map(item => {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, item[0], \" \", item[1]);\n    })));\n  }\n\n}\n\nclass AppMainContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: \"login\",\n      user: \"\",\n      items: [],\n      orders: new Array(100)\n    };\n    this.state.orders.fill(0);\n    this.sendOrder = this.sendOrder.bind(this);\n    this.login = this.login.bind(this);\n    this.setUserName = this.setUserName.bind(this);\n    this.tryLogin = this.tryLogin.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(ServerIP + \"menu\").then(res => res.json()).then(res => this.setState({\n      items: res\n    })); //console.log(JSON.stringify(this.state.items));\n  }\n\n  updateOrder(itemCode, sign) {\n    let ordersUpdate = this.state.orders;\n    if (ordersUpdate[itemCode] + sign >= 0) ordersUpdate[itemCode] = ordersUpdate[itemCode] + sign;\n    this.setState({\n      orders: ordersUpdate\n    });\n    console.log(\"stateInMain\");\n    console.log(this.state.orders);\n  }\n\n  sendOrder() {\n    let order = {\n      user: this.state.user,\n      items: this.state.orders\n    };\n    fetch(ServerIP + \"order\", {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(order)\n    }).then(res => res.json()).then(res => console.log(res));\n  }\n\n  setUserName(e) {\n    this.setState({\n      user: e.target.value\n    });\n  }\n\n  tryLogin(e) {\n    if (e.keyCode === 13) {\n      this.login();\n    }\n  }\n\n  login() {\n    //TODO: Fetch server and retrieve previous order of the user if any are present SOLVED\n    fetch(ServerIP + \"order/userMenu/\", {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: this.state.user\n      })\n    }).then(res => res.json()).then(res => this.setState({\n      orders: res\n    }));\n    this.setState({\n      mode: \"menu\"\n    });\n  }\n\n  render() {\n    let myOrder = this.state.orders.map((item, idx) => {\n      return [item, idx];\n    }).filter(item => {\n      return item[0] > 0;\n    });\n\n    if (this.state.mode === \"menu\") {\n      return React.createElement(\"div\", {\n        className: \"AppMainContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"Send\",\n        onClick: this.sendOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"OK\"), this.state.items.map((item, idx) => {\n        return React.createElement(MenuItem, {\n          name: item.name,\n          ingredients: item.ingredients.concat(),\n          count: item.count,\n          img: item.img,\n          code: item.code,\n          order: this.updateOrder.bind(this),\n          selected: this.state.orders[idx + 1],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        });\n      }), React.createElement(MyOrder, {\n        selectedItems: myOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }));\n    } else if (this.state.mode === \"login\") {\n      return React.createElement(\"div\", {\n        className: \"Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"name\",\n        type: \"text\",\n        onChange: this.setUserName,\n        onKeyDown: this.tryLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"loginButton\",\n        onClick: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"OK\"));\n    }\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/giorgio/WebstormProjects/Express-React/client/src/App.js"],"names":["React","ServerIP","Container","Component","constructor","props","state","render","AppHeader","resetOrder","fetch","method","headers","then","res","json","console","log","MenuItem","removeItem","bind","addItem","event","code","target","attributes","undefined","parentNode","changeItem","sign","value","order","name","count","img","selected","MyOrder","selectedItems","map","item","AppMainContent","mode","user","items","orders","Array","fill","sendOrder","login","setUserName","tryLogin","componentDidMount","setState","updateOrder","itemCode","ordersUpdate","body","JSON","stringify","e","keyCode","myOrder","idx","filter","ingredients","concat","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst ServerIP = \"http://192.168.1.9:9000/\"\n\nclass Container extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    render(){\n        return (\n            <>\n                <AppHeader/>\n                <div className=\"Separator\"/>\n                <AppMainContent/>\n            </>\n        )\n    }\n\n}\n\nclass AppHeader extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    resetOrder(){\n        fetch(ServerIP+\"order/reset/\", {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            },\n        }).then(res => res.json()).then(res => console.log(res));\n    }\n\n    render(){\n        return (\n            <div className=\"AppHeader\">\n                TemakiOrder\n            </div>\n        )\n    }\n}\n\nclass MenuItem extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            // orderedItems: 0,\n        };\n        this.removeItem = this.removeItem.bind(this);\n        this.addItem = this.addItem.bind(this);\n    }\n\n    removeItem(event){\n        var code;\n        if(event.target.attributes.code !== undefined){\n            code = event.target.attributes.code;\n        }else{\n            code = event.target.parentNode.attributes.code;\n        }\n        this.changeItem(code, -1);\n    }\n\n    addItem(event){\n        var code;\n        if(event.target.attributes.code !== undefined){\n            code = event.target.attributes.code;\n        }else{\n            code = event.target.parentNode.attributes.code;\n        }\n        this.changeItem(code, +1);\n    }\n\n    changeItem(code, sign){\n        console.log(code.value);\n        this.props.order(code.value, sign);\n\n    }\n\n    render(){\n        return (\n            <div className=\"MenuItem\" code={this.props.code}>{this.props.name} <br/> {this.props.count}Pz <br/>\n                <button className=\"RemoveItem\" onClick={this.removeItem}>-</button>\n                <img src={this.props.img} className=\"itemLogo\" alt={this.props.name}/>\n                <button className=\"AddItem\" onClick={this.addItem}>+</button>\n                <div className=\"ItemCounter\">{this.props.selected}</div>\n            </div>\n        )\n    }\n}\n\nclass MyOrder extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div>\n                <ul className=\"MyOrder\">\n                    {this.props.selectedItems.map((item) => {\n                        return  <li>{item[0]} {item[1]}</li>\n                    })}\n\n                </ul>\n            </div>\n        )\n    }\n}\n\nclass AppMainContent extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            mode: \"login\",\n            user: \"\",\n            items: [],\n            orders: new Array(100),\n        };\n        this.state.orders.fill(0);\n        this.sendOrder = this.sendOrder.bind(this);\n        this.login = this.login.bind(this);\n        this.setUserName = this.setUserName.bind(this);\n        this.tryLogin = this.tryLogin.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(ServerIP+\"menu\")\n            .then(res => res.json())\n            .then(res => this.setState({ items: res }));\n        //console.log(JSON.stringify(this.state.items));\n    }\n\n    updateOrder(itemCode, sign){\n        let ordersUpdate = this.state.orders;\n        if(ordersUpdate[itemCode] + sign>=0)\n            ordersUpdate[itemCode] = ordersUpdate[itemCode] + sign;\n        this.setState({\n            orders: ordersUpdate,\n        });\n        console.log(\"stateInMain\")\n        console.log(this.state.orders);\n    }\n\n    sendOrder(){\n        let order = {\n            user: this.state.user,\n            items: this.state.orders,\n        };\n        fetch(ServerIP+\"order\", {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(order)\n        }).then(res => res.json()).then(res => console.log(res));\n\n    }\n\n    setUserName(e){\n        this.setState({\n            user: e.target.value,\n        })\n    }\n\n    tryLogin(e){\n        if(e.keyCode === 13){\n            this.login()\n        }\n    }\n\n    login(){\n        //TODO: Fetch server and retrieve previous order of the user if any are present SOLVED\n        fetch(ServerIP+\"order/userMenu/\", {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({user:this.state.user}),\n        })\n            .then(res => res.json())\n            .then(res => this.setState({ orders: res }));\n        this.setState({\n            mode: \"menu\"\n        })\n    }\n\n    render(){\n        let myOrder = this.state.orders.map((item, idx) => {\n            return [item, idx];\n        }).filter((item) => {\n            return item[0]>0;\n        });\n        if(this.state.mode === \"menu\"){\n            return (\n                <div className=\"AppMainContent\">\n                    <button id=\"Send\" onClick={this.sendOrder}>OK</button>\n                    {/*TODO: Add sections of the menu*/}\n                    {this.state.items.map((item, idx) => {\n                        return <MenuItem name={item.name} ingredients={item.ingredients.concat()} count={item.count} img={item.img} code={item.code} order={this.updateOrder.bind(this)} selected={this.state.orders[idx+1]}/>\n                    })}\n                    <MyOrder selectedItems={myOrder}/>\n                </div>\n            )\n        }else if(this.state.mode === \"login\"){\n            return (\n                <div className=\"Login\">\n                    <input id=\"name\" type=\"text\" onChange={this.setUserName} onKeyDown={this.tryLogin}/>\n                    <button id=\"loginButton\" onClick={this.login}>OK</button>\n                </div>\n\n            )\n        }\n    }\n}\n\nclass App extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n\n        }\n    }\n    render(){\n        return (\n            <Container/>\n        )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}